# -*- coding: utf-8 -*-
"""Assignment2 -Question2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VEVrU8MZUeirv6YdJZ8Ywr3WzmwGecMf
"""

from google.colab import drive
drive.mount('/content/gdrive')
path_to_csv = '/content/gdrive/My Drive/glass.csv'
import warnings
warnings.filterwarnings("ignore")

import pandas as pd
# Read the provided CSV file ‘data.csv’
df = pd.read_csv(path_to_csv)
df

# Implement Naïve Bayes method using scikit-learn library and report the accuracy
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score
X=df.drop('Type',axis=1)
y=df['Type']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)
classifier = GaussianNB()
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)
# Evaluate the model on testing part using score and clasification_report
print(classification_report(y_test, y_pred))
print(confusion_matrix(y_test, y_pred))
print('accuracy is',accuracy_score(y_pred,y_test))

#Implement SVM
from sklearn import svm
classifier=svm.SVC()
classifier.fit(X_train,y_train)
y_pred=classifier.predict(X_test)
print(classification_report(y_test,y_pred,zero_division=1))
print(confusion_matrix(y_test,y_pred))
print("accuracy is:", accuracy_score(y_pred,y_test))

# Do at least two visualizations to describe or show correlations in the Glass Dataset.
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Compute the correlation matrix
correlation_matrix = df.corr()

# Create a heatmap
#plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap of Glass Dataset')
plt.show()

sns.scatterplot(correlation_matrix)
plt.legend(bbox_to_anchor=(1.3, 1), loc='upper right', borderaxespad=0)

#Which algorithm you got better accuracy? Can you justify why?
Naive Bayes outperformed SVM in accuracy, achieving higher accuracy of 0.3721 compared to 0.2093. Naive Bayes achieved better precision, recall, and F1-score, with a weighted average precision of 0.40, recall of 0.37, and F1-score of 0.36. SVM's precision was higher but may be misleading due to data imbalances. Naive Bayes missed a significant number of positive samples and performed poorly in terms of recall. Overall, Naive Bayes outperformed SVM in accuracy, precision, recall, and F1-score
